<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on GHOSTの囁き</title>
    <link>https://ritarock.github.io/tags/javascript/</link>
    <description>Recent content in JavaScript on GHOSTの囁き</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 16 Jun 2020 11:50:31 +0900</lastBuildDate>
    
	<atom:link href="https://ritarock.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript の call, apply, bind</title>
      <link>https://ritarock.github.io/posts/2020-06-16t115031&#43;090000/</link>
      <pubDate>Tue, 16 Jun 2020 11:50:31 +0900</pubDate>
      
      <guid>https://ritarock.github.io/posts/2020-06-16t115031&#43;090000/</guid>
      <description>ちゃんと理解してなかった。。。 apply 結局公式が一番わかりやすい https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply apply() メソッドは与えられた this 参照値と、配列 (もしくは配列風のオブジェクト) の形で与え</description>
    </item>
    
    <item>
      <title>JavaScriptの非同期処理(Promise)</title>
      <link>https://ritarock.github.io/posts/2017-11-07t090000&#43;0900/</link>
      <pubDate>Tue, 07 Nov 2017 09:00:00 +0900</pubDate>
      
      <guid>https://ritarock.github.io/posts/2017-11-07t090000&#43;0900/</guid>
      <description>Promise.resolve().then(function() { return new Promise(function(fulfilled, rejected) { //処理1 fulfilled(); }); }).then(function() { return new Promise(function(fulfilled, rejected) { //処理2 fulfilled(); }); }).then(function() { return new Promise(function(fulfilled, rejected) { //処理3 }); })</description>
    </item>
    
  </channel>
</rss>