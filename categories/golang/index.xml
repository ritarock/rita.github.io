<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on GHOSTの囁き</title>
    <link>https://ritarock.github.io/categories/golang/</link>
    <description>Recent content in golang on GHOSTの囁き</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 04 May 2020 14:53:06 +0900</lastBuildDate>
    
	<atom:link href="https://ritarock.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>golangでatcorderの入出力</title>
      <link>https://ritarock.github.io/posts/2020-05-04t145305&#43;090000/</link>
      <pubDate>Mon, 04 May 2020 14:53:06 +0900</pubDate>
      
      <guid>https://ritarock.github.io/posts/2020-05-04t145305&#43;090000/</guid>
      <description>入力 単一数値、文字 var N int fmt.Scan(&amp;amp;N) var s string fmt.Scan(&amp;amp;s) 文字列、数列群をスライスで返す func scanStrings(len int) []string { var str string for i := 0; i &amp;lt; len; i++ { fmt.Scanf(&amp;#34;%s&amp;#34;, &amp;amp;str) strings = append(strings, str) } return strings } func scanNums(len int) []int { var num int for i :=</description>
    </item>
    
    <item>
      <title>windwosのGOPATH</title>
      <link>https://ritarock.github.io/posts/2018-11-12t090000&#43;0900/</link>
      <pubDate>Mon, 12 Nov 2018 09:00:00 +0900</pubDate>
      
      <guid>https://ritarock.github.io/posts/2018-11-12t090000&#43;0900/</guid>
      <description>setx GOPATH %USERPROFILE%\go</description>
    </item>
    
  </channel>
</rss>