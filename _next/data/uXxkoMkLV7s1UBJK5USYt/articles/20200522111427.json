{"pageProps":{"data":{"id":"20200522111427","fileContents":"{\n  \"title\": \"deno を触ってみる\",\n  \"date\": 20200522111427,\n  \"tags\": [\n    \"typescript\"\n  ],\n  \"bodyContent\": \"## 通常の実行\\n```ts\\nconsole.log(\\\"Wellcome to Deno\\\");\\n```\\n\\n```bash\\n$ deno run hello.ts\\nWellcome to Deno\\n```\\n\\n## http request があるとき\\n```ts\\nconst url = Deno.args[0];\\nconst res = await fetch(url);\\n\\nconst body = new Uint8Array(await res.arrayBuffer());\\nawait Deno.stdout.write(body);\\n```\\n\\n`--allow-net` をつける.\\n```bash\\n$ deno run --allow-net http.ts https://deno.land/manual/getting_started/first_steps\\n```\\n\\n### コマンドラインで引数を渡す\\n```ts\\nconsole.log(Deno.args)\\n```\\n\\n```bash\\n$ deno run args.ts 1 2 3\\n[ \\\"1\\\", \\\"2\\\", \\\"3\\\" ]\\n```\\n\\n## ファイル読み込み\\n```ts\\nfor (let i = 0; i < Deno.args.length; i++) {\\n    let filename = Deno.args[i];\\n    let file = await Deno.open(filename);\\n    await Deno.copy(file, Deno.stdout);\\n    file.close();\\n}\\n```\\n\\n`--allow-read` をつける.\\n```bash\\n$ deno run --allow-read read.ts args.ts\\nconsole.log(Deno.args);\\n```\\n\\n## server を起動\\n```ts\\nconst listener = Deno.listen({ port: 8080  });\\nconsole.log(\\\"listening on 0.0.0.0:8080\\\");\\nfor await (const conn of listener) {\\n      Deno.copy(conn, conn);\\n}\\n```\\n\\n```bash\\n$ deno run --allow-net server.ts\\n```\",\n  \"bodyHtml\": \"<h2>通常の実行</h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-built_in\\\">console</span>.log(<span class=\\\"hljs-string\\\">&quot;Wellcome to Deno&quot;</span>);</code></pre><pre><code class=\\\"hljs\\\">$ deno run hello.ts\\nWellcome to Deno</code></pre><h2>http request があるとき</h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">const</span> url = Deno.args[<span class=\\\"hljs-number\\\">0</span>];\\n<span class=\\\"hljs-keyword\\\">const</span> res = <span class=\\\"hljs-keyword\\\">await</span> fetch(url);\\n\\n<span class=\\\"hljs-keyword\\\">const</span> body = <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Uint8Array</span>(<span class=\\\"hljs-keyword\\\">await</span> res.arrayBuffer());\\n<span class=\\\"hljs-keyword\\\">await</span> Deno.stdout.write(body);</code></pre><p><code>--allow-net</code> をつける.</p>\\n<pre><code class=\\\"hljs\\\">$ deno run --allow-net http.ts https://deno.land/manual/getting_started/first_steps</code></pre><h3>コマンドラインで引数を渡す</h3>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-built_in\\\">console</span>.log(Deno.args)</code></pre><pre><code class=\\\"hljs\\\">$ deno run args.ts 1 2 3\\n[ <span class=\\\"hljs-string\\\">&quot;1&quot;</span>, <span class=\\\"hljs-string\\\">&quot;2&quot;</span>, <span class=\\\"hljs-string\\\">&quot;3&quot;</span> ]</code></pre><h2>ファイル読み込み</h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">for</span> (<span class=\\\"hljs-keyword\\\">let</span> i = <span class=\\\"hljs-number\\\">0</span>; i &lt; Deno.args.length; i++) {\\n    <span class=\\\"hljs-keyword\\\">let</span> filename = Deno.args[i];\\n    <span class=\\\"hljs-keyword\\\">let</span> file = <span class=\\\"hljs-keyword\\\">await</span> Deno.open(filename);\\n    <span class=\\\"hljs-keyword\\\">await</span> Deno.copy(file, Deno.stdout);\\n    file.close();\\n}</code></pre><p><code>--allow-read</code> をつける.</p>\\n<pre><code class=\\\"hljs\\\">$ deno run --allow-read read.ts args.ts\\nconsole.log(Deno.args);</code></pre><h2>server を起動</h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">const</span> listener = Deno.listen({ <span class=\\\"hljs-attr\\\">port</span>: <span class=\\\"hljs-number\\\">8080</span>  });\\n<span class=\\\"hljs-built_in\\\">console</span>.log(<span class=\\\"hljs-string\\\">&quot;listening on 0.0.0.0:8080&quot;</span>);\\n<span class=\\\"hljs-keyword\\\">for</span> <span class=\\\"hljs-keyword\\\">await</span> (<span class=\\\"hljs-keyword\\\">const</span> conn <span class=\\\"hljs-keyword\\\">of</span> listener) {\\n      Deno.copy(conn, conn);\\n}</code></pre><pre><code class=\\\"hljs\\\">$ deno run --allow-net server.ts</code></pre>\",\n  \"dir\": \"articles\",\n  \"base\": \"20200522111427.json\",\n  \"ext\": \".json\",\n  \"sourceBase\": \"20200522111427.md\",\n  \"sourceExt\": \".md\"\n}"}},"__N_SSG":true}