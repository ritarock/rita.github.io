{"pageProps":{"docBody":{"id":"20210508160959","title":"Golang で 集合の演算","content":"\n## 何も使わずに実装する\n### 和集合\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\ta := []int{1, 2, 3}\n\tb := []int{2, 3, 4}\n\tc := []int{3}\n\n\tresult := func(array ...[]int) []int {\n\t\tm := make(map[int]struct{})\n\t\tfor _, arr := range array {\n\t\t\tfor _, v := range arr {\n\t\t\t\tm[v] = struct{}{}\n\t\t\t}\n\t\t}\n\t\ttmp := []int{}\n\t\tfor k := range m {\n\t\t\ttmp = append(tmp, k)\n\t\t}\n\t\treturn tmp\n\t}(a, b, c)\n\n\tfmt.Println(result)\n}\n\n// [3 4 1 2]\n```\n\n## 積集合\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\ta := []int{1, 2, 3}\n\tb := []int{2, 3, 4}\n\tc := []int{3}\n\n\tresult := func(array ...[]int) []int {\n\t\tm := make(map[int]struct{})\n\t\ttmp1 := []int{}\n\t\ttmp2 := []int{}\n\t\tfor _, v := range array[0] {\n\t\t\tm[v] = struct{}{}\n\t\t}\n\t\tfor _, v := range array[1] {\n\t\t\tif _, ok := m[v]; !ok {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\ttmp1 = append(tmp1, v)\n\t\t}\n\n\t\tfor i := 0; i < len(array)-2; i++ {\n\t\t\tfunc(arr1, arr2 []int) {\n\t\t\t\tm := make(map[int]struct{})\n\t\t\t\tfor _, v := range arr1 {\n\t\t\t\t\tm[v] = struct{}{}\n\t\t\t\t}\n\t\t\t\tfor _, v := range arr2 {\n\t\t\t\t\tif _, ok := m[v]; !ok {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\ttmp2 = append(tmp2, v)\n\t\t\t\t}\n\t\t\t}(tmp1, array[i+2])\n\t\t}\n\t\treturn tmp2\n\t}(a, b, c)\n\n\tuniqueResult := func(arr []int) []int {\n\t\tm := make(map[int]struct{})\n\t\ttmp := make([]int, 0)\n\t\tfor _, v := range arr {\n\t\t\tif _, ok := m[v]; !ok {\n\t\t\t\tm[v] = struct{}{}\n\t\t\t\ttmp = append(tmp, v)\n\t\t\t}\n\t\t}\n\t\treturn tmp\n\t}(result)\n\n\tfmt.Println(uniqueResult)\n}\n\n// [3]\n```\n\n## 差集合を実装してみる\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\ta := []int{1, 2, 3}\n\tb := []int{2, 3}\n\n\tresult := func(arr1, arr2 []int) []int {\n\t\tm := make(map[int]struct{})\n\t\tfor _, v := range arr2 {\n\t\t\tm[v] = struct{}{}\n\t\t}\n\n\t\ttmp := []int{}\n\t\tfor _, v := range arr1 {\n\t\t\tif _, ok := m[v]; ok {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\ttmp = append(tmp, v)\n\t\t}\n\t\treturn tmp\n\t}(a, b)\n\n\tfmt.Println(result)\n}\n\n// [1]\n```\n\n## github.com/golang-collections/collections を使って実装する\n### 和集合\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/golang-collections/collections/set\"\n)\n\nfunc main() {\n\ta := []int{1, 2, 3}\n\tb := []int{2, 3, 4}\n\tc := []int{3}\n\taSet := set.New()\n\tbSet := set.New()\n\tcSet := set.New()\n\n\tfor _, v := range a {\n\t\taSet.Insert(v)\n\t}\n\tfor _, v := range b {\n\t\tbSet.Insert(v)\n\t}\n\tfor _, v := range c {\n\t\tcSet.Insert(v)\n\t}\n\n\tresult := aSet.Union(bSet).Union(cSet)\n\tresultArr := []int{}\n\tresult.Do(func(i interface{}) { resultArr = append(resultArr, i.(int)) })\n\tfmt.Println(resultArr)\n}\n\n// [1 2 3 4]\n```\n\n## 積集合\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/golang-collections/collections/set\"\n)\n\nfunc main() {\n\ta := []int{1, 2, 3}\n\tb := []int{2, 3, 4}\n\tc := []int{3}\n\taSet := set.New()\n\tbSet := set.New()\n\tcSet := set.New()\n\n\tfor _, v := range a {\n\t\taSet.Insert(v)\n\t}\n\tfor _, v := range b {\n\t\tbSet.Insert(v)\n\t}\n\tfor _, v := range c {\n\t\tcSet.Insert(v)\n\t}\n\n\tresult := aSet.Intersection(bSet).Intersection(cSet)\n\tresultArr := []int{}\n\tresult.Do(func(i interface{}) { resultArr = append(resultArr, i.(int)) })\n\tfmt.Println(resultArr)\n}\n\n// [3]\n```\n\n## 差集合を実装してみる\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/golang-collections/collections/set\"\n)\n\nfunc main() {\n\ta := []int{1, 2, 3}\n\tb := []int{2, 3}\n\taSet := set.New()\n\tbSet := set.New()\n\n\tfor _, v := range a {\n\t\taSet.Insert(v)\n\t}\n\tfor _, v := range b {\n\t\tbSet.Insert(v)\n\t}\n\n\tresult := aSet.Difference(bSet)\n\tresultArr := []int{}\n\tresult.Do(func(i interface{}) { resultArr = append(resultArr, i.(int)) })\n\n\tfmt.Println(resultArr)\n}\n\n// [1]\n```\n"}},"__N_SSG":true}