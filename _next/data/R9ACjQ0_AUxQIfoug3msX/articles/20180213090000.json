{"pageProps":{"data":{"id":"20180213090000","fileContents":"{\n  \"title\": \"Docker のインストールからコンテナ作成まで\",\n  \"date\": 20180213090000,\n  \"tags\": [\n    \"docker\"\n  ],\n  \"bodyContent\": \"## 開発環境\\nUbuntu/trusty64\\n\\n## Docker のインストール\\n```bash\\n$ sudo apt-get update\\n$ sudo apt-get -y install \\\\\\n    apt-transport-https \\\\\\n    ca-certificates \\\\\\n    curl \\\\\\n    software-properties-common\\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\\n$ sudo apt-key fingerprint 0EBFCD88\\n$ sudo add-apt-repository -y  \\\\\\n   \\\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\\\\n   $(lsb_release -cs) \\\\\\n   stable\\\"\\n$ sudo apt-get update\\n$ sudo apt-get install -y docker-ce\\n```\\n\\n## Docker コマンド\\n### ローカルに保存された docker イメージの一覧を取得\\n```bash\\n$ docker images\\n```\\n\\n### docker hub にあるイメージを検索\\n```bash\\n$ docker search <イメージ>\\n```\\n\\n### docker hub にあるイメージをローカルに取得する\\n```bash\\n$ docker pull <イメージ>\\n```\\n\\n### コンテナでプロセスを起動する\\n```bash\\n$ docker run -it <イメージ> /bin/bash\\n```\\n\\n### プロセスを確認する(停止されたものも含む)\\n```bash\\n$ docker ps -a\\n```\\n\\n### 停止されたコンテナの削除\\n```bash\\n$ docker rm <コンテナid>\\n```\\n\\nid は一意なので頭の 4 桁程度入力すれば OK.\\n\\n### コンテナを全て削除\\n```bash\\n$ docker rm $(docker ps -aq)\\n```\\n\\n### exit と同時にコンテナの削除\\n```bash\\n$ docker run --rm -it <イメージ> /bin/bash\\n```\\n\\n### ポートをホスト側に公開して起動\\n```bash\\n$ docker run -it -p 80:80 <イメージ> /bin/bash\\n```\\n\\n### 外部ファイルを取り込む\\n```bash\\n$ docker run -it -v <ホスト側のパス>:<コンテナ側のパス> <イメージ> /bin/bash\\n```\\n\\n## Dockerfile 作成してからの流れ\\n### Dockerfile からイメージを作成\\n```bash\\n$ docker build -t <作成するイメージ名> .\\n```\\n\\n### 作成したイメージからコンテナを起動\\n```bash\\n$ docker run --name <起動するコンテナ名> -d -p <イメージ名>\\n```\\n\\n### コンテナの停止\\n```bash\\n$ docker stop <コンテナ名>\\n```\",\n  \"bodyHtml\": \"<h2>開発環境</h2>\\n<p>Ubuntu/trusty64</p>\\n<h2>Docker のインストール</h2>\\n<pre><code class=\\\"hljs\\\">$ sudo apt-get update\\n$ sudo apt-get -y install \\\\\\n    apt-transport-https \\\\\\n    ca-certificates \\\\\\n    curl \\\\\\n    software-properties-common\\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\\n$ sudo apt-key fingerprint 0EBFCD88\\n$ sudo add-apt-repository -y  \\\\\\n   <span class=\\\"hljs-string\\\">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\\\\n   <span class=\\\"hljs-subst\\\">$(lsb_release -cs)</span> \\\\\\n   stable&quot;</span>\\n$ sudo apt-get update\\n$ sudo apt-get install -y docker-ce</code></pre><h2>Docker コマンド</h2>\\n<h3>ローカルに保存された docker イメージの一覧を取得</h3>\\n<pre><code class=\\\"hljs\\\">$ docker images</code></pre><h3>docker hub にあるイメージを検索</h3>\\n<pre><code class=\\\"hljs\\\">$ docker search &lt;イメージ&gt;</code></pre><h3>docker hub にあるイメージをローカルに取得する</h3>\\n<pre><code class=\\\"hljs\\\">$ docker pull &lt;イメージ&gt;</code></pre><h3>コンテナでプロセスを起動する</h3>\\n<pre><code class=\\\"hljs\\\">$ docker run -it &lt;イメージ&gt; /bin/bash</code></pre><h3>プロセスを確認する(停止されたものも含む)</h3>\\n<pre><code class=\\\"hljs\\\">$ docker ps -a</code></pre><h3>停止されたコンテナの削除</h3>\\n<pre><code class=\\\"hljs\\\">$ docker rm &lt;コンテナid&gt;</code></pre><p>id は一意なので頭の 4 桁程度入力すれば OK.</p>\\n<h3>コンテナを全て削除</h3>\\n<pre><code class=\\\"hljs\\\">$ docker rm $(docker ps -aq)</code></pre><h3>exit と同時にコンテナの削除</h3>\\n<pre><code class=\\\"hljs\\\">$ docker run --rm -it &lt;イメージ&gt; /bin/bash</code></pre><h3>ポートをホスト側に公開して起動</h3>\\n<pre><code class=\\\"hljs\\\">$ docker run -it -p 80:80 &lt;イメージ&gt; /bin/bash</code></pre><h3>外部ファイルを取り込む</h3>\\n<pre><code class=\\\"hljs\\\">$ docker run -it -v &lt;ホスト側のパス&gt;:&lt;コンテナ側のパス&gt; &lt;イメージ&gt; /bin/bash</code></pre><h2>Dockerfile 作成してからの流れ</h2>\\n<h3>Dockerfile からイメージを作成</h3>\\n<pre><code class=\\\"hljs\\\">$ docker build -t &lt;作成するイメージ名&gt; .</code></pre><h3>作成したイメージからコンテナを起動</h3>\\n<pre><code class=\\\"hljs\\\">$ docker run --name &lt;起動するコンテナ名&gt; -d -p &lt;イメージ名&gt;</code></pre><h3>コンテナの停止</h3>\\n<pre><code class=\\\"hljs\\\">$ docker stop &lt;コンテナ名&gt;</code></pre>\",\n  \"dir\": \"articles\",\n  \"base\": \"20180213090000.json\",\n  \"ext\": \".json\",\n  \"sourceBase\": \"20180213090000.md\",\n  \"sourceExt\": \".md\"\n}"}},"__N_SSG":true}