{"pageProps":{"data":{"id":"20200505151108","fileContents":"{\n  \"title\": \"atcorder 過去問精鋭10問を Golang で解いた\",\n  \"date\": 20200505151108,\n  \"tags\": [\n    \"golang\"\n  ],\n  \"bodyContent\": \"## 1問目 [ABC 086 A - Product](https://atcoder.jp/contests/abc086/tasks/abc086_a)\\n```go\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n\\tvar a, b int\\n\\tfmt.Scan(&a, &b)\\n\\n\\tif (a*b)%2 == 0 {\\n\\t\\tfmt.Println(\\\"Even\\\")\\n\\t} else {\\n\\t\\tfmt.Println(\\\"Odd\\\")\\n\\t}\\n}\\n```\\n\\n## 2問目 [ABC 081 A - Placing Marbles](https://atcoder.jp/contests/abc081/tasks/abc081_a)\\n```go\\npackage main\\n\\nimport (\\n\\t\\\"fmt\\\"\\n\\t\\\"strings\\\"\\n)\\n\\nfunc main() {\\n\\tvar s string\\n\\tvar count int\\n\\tfmt.Scan(&s)\\n\\n\\tsplitWord := strings.Split(s, \\\"\\\")\\n\\n\\tfor _, w := range splitWord {\\n\\t\\tif w == \\\"1\\\" {\\n\\t\\t\\tcount++\\n\\t\\t}\\n\\t}\\n\\tfmt.Println(count)\\n}\\n```\\n\\n## 3問目 [ABC 081 B - Shift Only](https://atcoder.jp/contests/abc081/tasks/abc081_b)\\n```go\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\nfunc scanNums(len int) []int {\\n\\tvar num int\\n\\tvar nums []int\\n\\tfor i := 0; i < len; i++ {\\n\\t\\tfmt.Scan(&num)\\n\\t\\tnums = append(nums, num)\\n\\t}\\n\\n\\treturn nums\\n}\\n\\nfunc main() {\\n\\tvar N int\\n\\tfmt.Scan(&N)\\n\\n\\tnums := scanNums(N)\\n\\n\\tflg := true\\n\\tcount := 0\\n\\n\\tfor flg {\\n\\t\\tfor i, s := range nums {\\n\\t\\t\\tif s%2 != 0 {\\n\\t\\t\\t\\tflg = false\\n\\t\\t\\t}\\n\\t\\t\\tnums[i] = s / 2\\n\\t\\t}\\n\\t\\tcount++\\n\\t}\\n\\tfmt.Println(count - 1)\\n}\\n```\\n\\n## 4問目 [ABC 087 B - Coins](https://atcoder.jp/contests/abc087/tasks/abc087_b)\\n```go\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n\\tvar A, B, C, X int\\n\\ta, b, c := 500, 100, 50\\n\\tcount := 0\\n\\tfmt.Scan(&A, &B, &C, &X)\\n\\n\\tfor _c := 0; _c <= C; _c++ {\\n\\t\\tfor _b := 0; _b <= B; _b++ {\\n\\t\\t\\tfor _a := 0; _a <= A; _a++ {\\n\\t\\t\\t\\tif X == a*_a+b*_b+c*_c {\\n\\t\\t\\t\\t\\tcount++\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tfmt.Println(count)\\n}\\n```\\n\\n## 5問目 [ABC 083 B - Some Sums](https://atcoder.jp/contests/abc083/tasks/abc083_b)\\n```go\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\nfunc sumDigists(n int) int {\\n\\tsum := 0\\n\\tif n < 10 {\\n\\t\\treturn n\\n\\t} else {\\n\\t\\tfor n > 0 {\\n\\t\\t\\tsum += n % 10\\n\\t\\t\\tn /= 10\\n\\t\\t}\\n\\t}\\n\\treturn sum\\n}\\n\\nfunc main() {\\n\\tvar N, A, B int\\n\\tfmt.Scan(&N, &A, &B)\\n\\tvar result int\\n\\tfor i := 0; i <= N; i++ {\\n\\t\\tif A <= sumDigists(i) && sumDigists(i) <= B {\\n\\t\\t\\tresult += i\\n\\t\\t}\\n\\t}\\n\\n\\tfmt.Println(result)\\n}\\n```\\n\\n## 6問目 [ABC 088 B - Card Game for Two](https://atcoder.jp/contests/abc088/tasks/abc088_b)\\n降順のソートはこんな感じで行う。\\n\\n```go\\nsort.Sort(sort.Reverse(sort.IntSlice(arr)))\\n```\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\\"fmt\\\"\\n\\t\\\"sort\\\"\\n)\\n\\nfunc scanNums(len int) []int {\\n\\tvar num int\\n\\tvar nums []int\\n\\tfor i := 0; i < len; i++ {\\n\\t\\tfmt.Scan(&num)\\n\\t\\tnums = append(nums, num)\\n\\t}\\n\\treturn nums\\n}\\n\\nfunc main() {\\n\\tvar N int\\n\\tvar result int\\n\\tfmt.Scan(&N)\\n\\tarr := scanNums(N)\\n\\tsort.Sort(sort.Reverse(sort.IntSlice(arr)))\\n\\n\\tfor i, v := range arr {\\n\\t\\tif i%2 == 0 {\\n\\t\\t\\tresult += v\\n\\t\\t} else {\\n\\t\\t\\tresult -= v\\n\\t\\t}\\n\\t}\\n\\n\\tfmt.Println(result)\\n}\\n```\\n\\n## 7問目 [ABC 085 B - Kagami Mochi](https://atcoder.jp/contests/abc085/tasks/abc085_b)\\n配列をユニークな配列にする関数を用意。\\n\\n```go\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\nfunc uniqValue(arr []int) []int {\\n\\tm := make(map[int]bool)\\n\\tvar uniq []int\\n\\n\\tfor _, v := range arr {\\n\\t\\tif !m[v] {\\n\\t\\t\\tm[v] = true\\n\\t\\t\\tuniq = append(uniq, v)\\n\\t\\t}\\n\\t}\\n\\treturn uniq\\n}\\n\\nfunc main() {\\n\\tvar N int\\n\\tfmt.Scan(&N)\\n\\tarr := make([]int, N)\\n\\n\\tfor i := 0; i < N; i++ {\\n\\t\\tfmt.Scan(&arr[i])\\n\\t}\\n\\n\\tresult := uniqValue(arr)\\n\\n\\tfmt.Println(len(result))\\n}\\n```\\n\\n## 8問目 [ABC 085 C - Otoshidama](https://atcoder.jp/contests/abc085/tasks/abc085_c)\\nfmt.Printf で文字列に埋め込む。\\n\\n```go\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n\\tvar N, sum int\\n\\tfmt.Scan(&N, &sum)\\n\\tresult := [3]int{-1, -1, -1}\\n\\nBREAK_LABEL:\\n\\tfor i := 0; i <= N; i++ {\\n\\t\\tfor j := 0; j <= N-i; j++ {\\n\\t\\t\\tif sum == 10000*i+5000*j+1000*(N-i-j) {\\n\\t\\t\\t\\tresult[0] = i\\n\\t\\t\\t\\tresult[1] = j\\n\\t\\t\\t\\tresult[2] = N - i - j\\n\\t\\t\\t\\tbreak BREAK_LABEL\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tfmt.Printf(\\\"%d %d %d\\\", result[0], result[1], result[2])\\n}\\n```\\n\\n## 9問目 [ABC 049 C - Daydream](https://atcoder.jp/contests/abc049/tasks/arc065_a)\\n```go\\npackage main\\n\\nimport (\\n\\t\\\"fmt\\\"\\n)\\n\\nfunc reverse(s string) string {\\n\\trs := []rune(s)\\n\\tfor i, j := 0, len(rs)-1; i < j; i, j = i+1, j-1 {\\n\\t\\trs[i], rs[j] = rs[j], rs[i]\\n\\t}\\n\\n\\treturn string(rs)\\n}\\n\\nfunc checker(s string, words []string) bool {\\n\\tfor _, w := range words {\\n\\t\\tif len(s) < len(w) {\\n\\t\\t\\tcontinue\\n\\t\\t}\\n\\t\\tif s[0:len(w)] == w {\\n\\t\\t\\tif len(s) == len(w) {\\n\\t\\t\\t\\treturn true\\n\\t\\t\\t}\\n\\t\\t\\treturn checker(s[len(w):], words)\\n\\t\\t}\\n\\t}\\n\\treturn false\\n}\\n\\nfunc main() {\\n\\tvar s string\\n\\tfmt.Scan(&s)\\n\\twords := []string{\\\"dream\\\", \\\"dreamer\\\", \\\"erase\\\", \\\"eraser\\\"}\\n\\n\\tfor i, _ := range words {\\n\\t\\twords[i] = reverse(words[i])\\n\\t}\\n\\ts = reverse(s)\\n\\n\\tif checker(s, words) {\\n\\t\\tfmt.Println(\\\"YES\\\")\\n\\t} else {\\n\\t\\tfmt.Println(\\\"NO\\\")\\n\\t}\\n}\\n```\\n\\n## 10問目 [ABC 086 C - Traveling](https://atcoder.jp/contests/abc086/tasks/arc089_a)\\n```go\\npackage main\\n\\nimport (\\n\\t\\\"fmt\\\"\\n\\t\\\"math\\\"\\n)\\n\\nfunc main() {\\n\\tvar N int\\n\\tfmt.Scan(&N)\\n\\tvar t0 int = 0\\n\\tvar t1 int\\n\\tvar x0, y0 float64 = 0, 0\\n\\tvar x1, y1 float64\\n\\n\\tfor range make([]int, N) {\\n\\t\\tfmt.Scan(&t1, &x1, &y1)\\n\\t\\tdt := t1 - t0\\n\\t\\tdist := math.Abs(x1-x0) + math.Abs(y1-y0)\\n\\n\\t\\tif dt < int(dist) || dt%2 != int(dist)%2 {\\n\\t\\t\\tfmt.Println(\\\"No\\\")\\n\\t\\t\\treturn\\n\\t\\t}\\n\\n\\t\\tt0, x0, y0 = t1, x1, y1\\n\\t}\\n\\tfmt.Println(\\\"Yes\\\")\\n}\\n```\",\n  \"bodyHtml\": \"<h2>1問目 <a href=\\\"https://atcoder.jp/contests/abc086/tasks/abc086_a\\\">ABC 086 A - Product</a></h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> a, b <span class=\\\"hljs-keyword\\\">int</span>\\n\\tfmt.Scan(&amp;a, &amp;b)\\n\\n\\t<span class=\\\"hljs-keyword\\\">if</span> (a*b)%<span class=\\\"hljs-number\\\">2</span> == <span class=\\\"hljs-number\\\">0</span> {\\n\\t\\tfmt.Println(<span class=\\\"hljs-string\\\">&quot;Even&quot;</span>)\\n\\t} <span class=\\\"hljs-keyword\\\">else</span> {\\n\\t\\tfmt.Println(<span class=\\\"hljs-string\\\">&quot;Odd&quot;</span>)\\n\\t}\\n}</code></pre><h2>2問目 <a href=\\\"https://atcoder.jp/contests/abc081/tasks/abc081_a\\\">ABC 081 A - Placing Marbles</a></h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> (\\n\\t<span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\t<span class=\\\"hljs-string\\\">&quot;strings&quot;</span>\\n)\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> s <span class=\\\"hljs-keyword\\\">string</span>\\n\\t<span class=\\\"hljs-keyword\\\">var</span> count <span class=\\\"hljs-keyword\\\">int</span>\\n\\tfmt.Scan(&amp;s)\\n\\n\\tsplitWord := strings.Split(s, <span class=\\\"hljs-string\\\">&quot;&quot;</span>)\\n\\n\\t<span class=\\\"hljs-keyword\\\">for</span> _, w := <span class=\\\"hljs-keyword\\\">range</span> splitWord {\\n\\t\\t<span class=\\\"hljs-keyword\\\">if</span> w == <span class=\\\"hljs-string\\\">&quot;1&quot;</span> {\\n\\t\\t\\tcount++\\n\\t\\t}\\n\\t}\\n\\tfmt.Println(count)\\n}</code></pre><h2>3問目 <a href=\\\"https://atcoder.jp/contests/abc081/tasks/abc081_b\\\">ABC 081 B - Shift Only</a></h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">scanNums</span><span class=\\\"hljs-params\\\">(<span class=\\\"hljs-built_in\\\">len</span> <span class=\\\"hljs-keyword\\\">int</span>)</span> []<span class=\\\"hljs-title\\\">int</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> num <span class=\\\"hljs-keyword\\\">int</span>\\n\\t<span class=\\\"hljs-keyword\\\">var</span> nums []<span class=\\\"hljs-keyword\\\">int</span>\\n\\t<span class=\\\"hljs-keyword\\\">for</span> i := <span class=\\\"hljs-number\\\">0</span>; i &lt; <span class=\\\"hljs-built_in\\\">len</span>; i++ {\\n\\t\\tfmt.Scan(&amp;num)\\n\\t\\tnums = <span class=\\\"hljs-built_in\\\">append</span>(nums, num)\\n\\t}\\n\\n\\t<span class=\\\"hljs-keyword\\\">return</span> nums\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> N <span class=\\\"hljs-keyword\\\">int</span>\\n\\tfmt.Scan(&amp;N)\\n\\n\\tnums := scanNums(N)\\n\\n\\tflg := <span class=\\\"hljs-literal\\\">true</span>\\n\\tcount := <span class=\\\"hljs-number\\\">0</span>\\n\\n\\t<span class=\\\"hljs-keyword\\\">for</span> flg {\\n\\t\\t<span class=\\\"hljs-keyword\\\">for</span> i, s := <span class=\\\"hljs-keyword\\\">range</span> nums {\\n\\t\\t\\t<span class=\\\"hljs-keyword\\\">if</span> s%<span class=\\\"hljs-number\\\">2</span> != <span class=\\\"hljs-number\\\">0</span> {\\n\\t\\t\\t\\tflg = <span class=\\\"hljs-literal\\\">false</span>\\n\\t\\t\\t}\\n\\t\\t\\tnums[i] = s / <span class=\\\"hljs-number\\\">2</span>\\n\\t\\t}\\n\\t\\tcount++\\n\\t}\\n\\tfmt.Println(count - <span class=\\\"hljs-number\\\">1</span>)\\n}</code></pre><h2>4問目 <a href=\\\"https://atcoder.jp/contests/abc087/tasks/abc087_b\\\">ABC 087 B - Coins</a></h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> A, B, C, X <span class=\\\"hljs-keyword\\\">int</span>\\n\\ta, b, c := <span class=\\\"hljs-number\\\">500</span>, <span class=\\\"hljs-number\\\">100</span>, <span class=\\\"hljs-number\\\">50</span>\\n\\tcount := <span class=\\\"hljs-number\\\">0</span>\\n\\tfmt.Scan(&amp;A, &amp;B, &amp;C, &amp;X)\\n\\n\\t<span class=\\\"hljs-keyword\\\">for</span> _c := <span class=\\\"hljs-number\\\">0</span>; _c &lt;= C; _c++ {\\n\\t\\t<span class=\\\"hljs-keyword\\\">for</span> _b := <span class=\\\"hljs-number\\\">0</span>; _b &lt;= B; _b++ {\\n\\t\\t\\t<span class=\\\"hljs-keyword\\\">for</span> _a := <span class=\\\"hljs-number\\\">0</span>; _a &lt;= A; _a++ {\\n\\t\\t\\t\\t<span class=\\\"hljs-keyword\\\">if</span> X == a*_a+b*_b+c*_c {\\n\\t\\t\\t\\t\\tcount++\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tfmt.Println(count)\\n}</code></pre><h2>5問目 <a href=\\\"https://atcoder.jp/contests/abc083/tasks/abc083_b\\\">ABC 083 B - Some Sums</a></h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">sumDigists</span><span class=\\\"hljs-params\\\">(n <span class=\\\"hljs-keyword\\\">int</span>)</span> <span class=\\\"hljs-title\\\">int</span></span> {\\n\\tsum := <span class=\\\"hljs-number\\\">0</span>\\n\\t<span class=\\\"hljs-keyword\\\">if</span> n &lt; <span class=\\\"hljs-number\\\">10</span> {\\n\\t\\t<span class=\\\"hljs-keyword\\\">return</span> n\\n\\t} <span class=\\\"hljs-keyword\\\">else</span> {\\n\\t\\t<span class=\\\"hljs-keyword\\\">for</span> n &gt; <span class=\\\"hljs-number\\\">0</span> {\\n\\t\\t\\tsum += n % <span class=\\\"hljs-number\\\">10</span>\\n\\t\\t\\tn /= <span class=\\\"hljs-number\\\">10</span>\\n\\t\\t}\\n\\t}\\n\\t<span class=\\\"hljs-keyword\\\">return</span> sum\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> N, A, B <span class=\\\"hljs-keyword\\\">int</span>\\n\\tfmt.Scan(&amp;N, &amp;A, &amp;B)\\n\\t<span class=\\\"hljs-keyword\\\">var</span> result <span class=\\\"hljs-keyword\\\">int</span>\\n\\t<span class=\\\"hljs-keyword\\\">for</span> i := <span class=\\\"hljs-number\\\">0</span>; i &lt;= N; i++ {\\n\\t\\t<span class=\\\"hljs-keyword\\\">if</span> A &lt;= sumDigists(i) &amp;&amp; sumDigists(i) &lt;= B {\\n\\t\\t\\tresult += i\\n\\t\\t}\\n\\t}\\n\\n\\tfmt.Println(result)\\n}</code></pre><h2>6問目 <a href=\\\"https://atcoder.jp/contests/abc088/tasks/abc088_b\\\">ABC 088 B - Card Game for Two</a></h2>\\n<p>降順のソートはこんな感じで行う。</p>\\n<pre><code class=\\\"hljs\\\">sort.Sort(sort.Reverse(sort.IntSlice(arr)))</code></pre><pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> (\\n\\t<span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\t<span class=\\\"hljs-string\\\">&quot;sort&quot;</span>\\n)\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">scanNums</span><span class=\\\"hljs-params\\\">(<span class=\\\"hljs-built_in\\\">len</span> <span class=\\\"hljs-keyword\\\">int</span>)</span> []<span class=\\\"hljs-title\\\">int</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> num <span class=\\\"hljs-keyword\\\">int</span>\\n\\t<span class=\\\"hljs-keyword\\\">var</span> nums []<span class=\\\"hljs-keyword\\\">int</span>\\n\\t<span class=\\\"hljs-keyword\\\">for</span> i := <span class=\\\"hljs-number\\\">0</span>; i &lt; <span class=\\\"hljs-built_in\\\">len</span>; i++ {\\n\\t\\tfmt.Scan(&amp;num)\\n\\t\\tnums = <span class=\\\"hljs-built_in\\\">append</span>(nums, num)\\n\\t}\\n\\t<span class=\\\"hljs-keyword\\\">return</span> nums\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> N <span class=\\\"hljs-keyword\\\">int</span>\\n\\t<span class=\\\"hljs-keyword\\\">var</span> result <span class=\\\"hljs-keyword\\\">int</span>\\n\\tfmt.Scan(&amp;N)\\n\\tarr := scanNums(N)\\n\\tsort.Sort(sort.Reverse(sort.IntSlice(arr)))\\n\\n\\t<span class=\\\"hljs-keyword\\\">for</span> i, v := <span class=\\\"hljs-keyword\\\">range</span> arr {\\n\\t\\t<span class=\\\"hljs-keyword\\\">if</span> i%<span class=\\\"hljs-number\\\">2</span> == <span class=\\\"hljs-number\\\">0</span> {\\n\\t\\t\\tresult += v\\n\\t\\t} <span class=\\\"hljs-keyword\\\">else</span> {\\n\\t\\t\\tresult -= v\\n\\t\\t}\\n\\t}\\n\\n\\tfmt.Println(result)\\n}</code></pre><h2>7問目 <a href=\\\"https://atcoder.jp/contests/abc085/tasks/abc085_b\\\">ABC 085 B - Kagami Mochi</a></h2>\\n<p>配列をユニークな配列にする関数を用意。</p>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">uniqValue</span><span class=\\\"hljs-params\\\">(arr []<span class=\\\"hljs-keyword\\\">int</span>)</span> []<span class=\\\"hljs-title\\\">int</span></span> {\\n\\tm := <span class=\\\"hljs-built_in\\\">make</span>(<span class=\\\"hljs-keyword\\\">map</span>[<span class=\\\"hljs-keyword\\\">int</span>]<span class=\\\"hljs-keyword\\\">bool</span>)\\n\\t<span class=\\\"hljs-keyword\\\">var</span> uniq []<span class=\\\"hljs-keyword\\\">int</span>\\n\\n\\t<span class=\\\"hljs-keyword\\\">for</span> _, v := <span class=\\\"hljs-keyword\\\">range</span> arr {\\n\\t\\t<span class=\\\"hljs-keyword\\\">if</span> !m[v] {\\n\\t\\t\\tm[v] = <span class=\\\"hljs-literal\\\">true</span>\\n\\t\\t\\tuniq = <span class=\\\"hljs-built_in\\\">append</span>(uniq, v)\\n\\t\\t}\\n\\t}\\n\\t<span class=\\\"hljs-keyword\\\">return</span> uniq\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> N <span class=\\\"hljs-keyword\\\">int</span>\\n\\tfmt.Scan(&amp;N)\\n\\tarr := <span class=\\\"hljs-built_in\\\">make</span>([]<span class=\\\"hljs-keyword\\\">int</span>, N)\\n\\n\\t<span class=\\\"hljs-keyword\\\">for</span> i := <span class=\\\"hljs-number\\\">0</span>; i &lt; N; i++ {\\n\\t\\tfmt.Scan(&amp;arr[i])\\n\\t}\\n\\n\\tresult := uniqValue(arr)\\n\\n\\tfmt.Println(<span class=\\\"hljs-built_in\\\">len</span>(result))\\n}</code></pre><h2>8問目 <a href=\\\"https://atcoder.jp/contests/abc085/tasks/abc085_c\\\">ABC 085 C - Otoshidama</a></h2>\\n<p>fmt.Printf で文字列に埋め込む。</p>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> N, sum <span class=\\\"hljs-keyword\\\">int</span>\\n\\tfmt.Scan(&amp;N, &amp;sum)\\n\\tresult := [<span class=\\\"hljs-number\\\">3</span>]<span class=\\\"hljs-keyword\\\">int</span>{<span class=\\\"hljs-number\\\">-1</span>, <span class=\\\"hljs-number\\\">-1</span>, <span class=\\\"hljs-number\\\">-1</span>}\\n\\nBREAK_LABEL:\\n\\t<span class=\\\"hljs-keyword\\\">for</span> i := <span class=\\\"hljs-number\\\">0</span>; i &lt;= N; i++ {\\n\\t\\t<span class=\\\"hljs-keyword\\\">for</span> j := <span class=\\\"hljs-number\\\">0</span>; j &lt;= N-i; j++ {\\n\\t\\t\\t<span class=\\\"hljs-keyword\\\">if</span> sum == <span class=\\\"hljs-number\\\">10000</span>*i+<span class=\\\"hljs-number\\\">5000</span>*j+<span class=\\\"hljs-number\\\">1000</span>*(N-i-j) {\\n\\t\\t\\t\\tresult[<span class=\\\"hljs-number\\\">0</span>] = i\\n\\t\\t\\t\\tresult[<span class=\\\"hljs-number\\\">1</span>] = j\\n\\t\\t\\t\\tresult[<span class=\\\"hljs-number\\\">2</span>] = N - i - j\\n\\t\\t\\t\\t<span class=\\\"hljs-keyword\\\">break</span> BREAK_LABEL\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tfmt.Printf(<span class=\\\"hljs-string\\\">&quot;%d %d %d&quot;</span>, result[<span class=\\\"hljs-number\\\">0</span>], result[<span class=\\\"hljs-number\\\">1</span>], result[<span class=\\\"hljs-number\\\">2</span>])\\n}</code></pre><h2>9問目 <a href=\\\"https://atcoder.jp/contests/abc049/tasks/arc065_a\\\">ABC 049 C - Daydream</a></h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> (\\n\\t<span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n)\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">reverse</span><span class=\\\"hljs-params\\\">(s <span class=\\\"hljs-keyword\\\">string</span>)</span> <span class=\\\"hljs-title\\\">string</span></span> {\\n\\trs := []<span class=\\\"hljs-keyword\\\">rune</span>(s)\\n\\t<span class=\\\"hljs-keyword\\\">for</span> i, j := <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-built_in\\\">len</span>(rs)<span class=\\\"hljs-number\\\">-1</span>; i &lt; j; i, j = i+<span class=\\\"hljs-number\\\">1</span>, j<span class=\\\"hljs-number\\\">-1</span> {\\n\\t\\trs[i], rs[j] = rs[j], rs[i]\\n\\t}\\n\\n\\t<span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">string</span>(rs)\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">checker</span><span class=\\\"hljs-params\\\">(s <span class=\\\"hljs-keyword\\\">string</span>, words []<span class=\\\"hljs-keyword\\\">string</span>)</span> <span class=\\\"hljs-title\\\">bool</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">for</span> _, w := <span class=\\\"hljs-keyword\\\">range</span> words {\\n\\t\\t<span class=\\\"hljs-keyword\\\">if</span> <span class=\\\"hljs-built_in\\\">len</span>(s) &lt; <span class=\\\"hljs-built_in\\\">len</span>(w) {\\n\\t\\t\\t<span class=\\\"hljs-keyword\\\">continue</span>\\n\\t\\t}\\n\\t\\t<span class=\\\"hljs-keyword\\\">if</span> s[<span class=\\\"hljs-number\\\">0</span>:<span class=\\\"hljs-built_in\\\">len</span>(w)] == w {\\n\\t\\t\\t<span class=\\\"hljs-keyword\\\">if</span> <span class=\\\"hljs-built_in\\\">len</span>(s) == <span class=\\\"hljs-built_in\\\">len</span>(w) {\\n\\t\\t\\t\\t<span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">true</span>\\n\\t\\t\\t}\\n\\t\\t\\t<span class=\\\"hljs-keyword\\\">return</span> checker(s[<span class=\\\"hljs-built_in\\\">len</span>(w):], words)\\n\\t\\t}\\n\\t}\\n\\t<span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">false</span>\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> s <span class=\\\"hljs-keyword\\\">string</span>\\n\\tfmt.Scan(&amp;s)\\n\\twords := []<span class=\\\"hljs-keyword\\\">string</span>{<span class=\\\"hljs-string\\\">&quot;dream&quot;</span>, <span class=\\\"hljs-string\\\">&quot;dreamer&quot;</span>, <span class=\\\"hljs-string\\\">&quot;erase&quot;</span>, <span class=\\\"hljs-string\\\">&quot;eraser&quot;</span>}\\n\\n\\t<span class=\\\"hljs-keyword\\\">for</span> i, _ := <span class=\\\"hljs-keyword\\\">range</span> words {\\n\\t\\twords[i] = reverse(words[i])\\n\\t}\\n\\ts = reverse(s)\\n\\n\\t<span class=\\\"hljs-keyword\\\">if</span> checker(s, words) {\\n\\t\\tfmt.Println(<span class=\\\"hljs-string\\\">&quot;YES&quot;</span>)\\n\\t} <span class=\\\"hljs-keyword\\\">else</span> {\\n\\t\\tfmt.Println(<span class=\\\"hljs-string\\\">&quot;NO&quot;</span>)\\n\\t}\\n}</code></pre><h2>10問目 <a href=\\\"https://atcoder.jp/contests/abc086/tasks/arc089_a\\\">ABC 086 C - Traveling</a></h2>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">package</span> main\\n\\n<span class=\\\"hljs-keyword\\\">import</span> (\\n\\t<span class=\\\"hljs-string\\\">&quot;fmt&quot;</span>\\n\\t<span class=\\\"hljs-string\\\">&quot;math&quot;</span>\\n)\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-title\\\">main</span><span class=\\\"hljs-params\\\">()</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">var</span> N <span class=\\\"hljs-keyword\\\">int</span>\\n\\tfmt.Scan(&amp;N)\\n\\t<span class=\\\"hljs-keyword\\\">var</span> t0 <span class=\\\"hljs-keyword\\\">int</span> = <span class=\\\"hljs-number\\\">0</span>\\n\\t<span class=\\\"hljs-keyword\\\">var</span> t1 <span class=\\\"hljs-keyword\\\">int</span>\\n\\t<span class=\\\"hljs-keyword\\\">var</span> x0, y0 <span class=\\\"hljs-keyword\\\">float64</span> = <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>\\n\\t<span class=\\\"hljs-keyword\\\">var</span> x1, y1 <span class=\\\"hljs-keyword\\\">float64</span>\\n\\n\\t<span class=\\\"hljs-keyword\\\">for</span> <span class=\\\"hljs-keyword\\\">range</span> <span class=\\\"hljs-built_in\\\">make</span>([]<span class=\\\"hljs-keyword\\\">int</span>, N) {\\n\\t\\tfmt.Scan(&amp;t1, &amp;x1, &amp;y1)\\n\\t\\tdt := t1 - t0\\n\\t\\tdist := math.Abs(x1-x0) + math.Abs(y1-y0)\\n\\n\\t\\t<span class=\\\"hljs-keyword\\\">if</span> dt &lt; <span class=\\\"hljs-keyword\\\">int</span>(dist) || dt%<span class=\\\"hljs-number\\\">2</span> != <span class=\\\"hljs-keyword\\\">int</span>(dist)%<span class=\\\"hljs-number\\\">2</span> {\\n\\t\\t\\tfmt.Println(<span class=\\\"hljs-string\\\">&quot;No&quot;</span>)\\n\\t\\t\\t<span class=\\\"hljs-keyword\\\">return</span>\\n\\t\\t}\\n\\n\\t\\tt0, x0, y0 = t1, x1, y1\\n\\t}\\n\\tfmt.Println(<span class=\\\"hljs-string\\\">&quot;Yes&quot;</span>)\\n}</code></pre>\",\n  \"dir\": \"articles\",\n  \"base\": \"20200505151108.json\",\n  \"ext\": \".json\",\n  \"sourceBase\": \"20200505151108.md\",\n  \"sourceExt\": \".md\"\n}"}},"__N_SSG":true}