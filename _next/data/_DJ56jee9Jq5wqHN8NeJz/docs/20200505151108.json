{"pageProps":{"docBody":{"id":"20200505151108","title":"atcorder 過去問精鋭10問を Golang で解いた","content":"\n## 1問目 [ABC 086 A - Product](https://atcoder.jp/contests/abc086/tasks/abc086_a)\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar a, b int\n\tfmt.Scan(&a, &b)\n\n\tif (a*b)%2 == 0 {\n\t\tfmt.Println(\"Even\")\n\t} else {\n\t\tfmt.Println(\"Odd\")\n\t}\n}\n```\n\n## 2問目 [ABC 081 A - Placing Marbles](https://atcoder.jp/contests/abc081/tasks/abc081_a)\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar s string\n\tvar count int\n\tfmt.Scan(&s)\n\n\tsplitWord := strings.Split(s, \"\")\n\n\tfor _, w := range splitWord {\n\t\tif w == \"1\" {\n\t\t\tcount++\n\t\t}\n\t}\n\tfmt.Println(count)\n}\n```\n\n## 3問目 [ABC 081 B - Shift Only](https://atcoder.jp/contests/abc081/tasks/abc081_b)\n```go\npackage main\n\nimport \"fmt\"\n\nfunc scanNums(len int) []int {\n\tvar num int\n\tvar nums []int\n\tfor i := 0; i < len; i++ {\n\t\tfmt.Scan(&num)\n\t\tnums = append(nums, num)\n\t}\n\n\treturn nums\n}\n\nfunc main() {\n\tvar N int\n\tfmt.Scan(&N)\n\n\tnums := scanNums(N)\n\n\tflg := true\n\tcount := 0\n\n\tfor flg {\n\t\tfor i, s := range nums {\n\t\t\tif s%2 != 0 {\n\t\t\t\tflg = false\n\t\t\t}\n\t\t\tnums[i] = s / 2\n\t\t}\n\t\tcount++\n\t}\n\tfmt.Println(count - 1)\n}\n```\n\n## 4問目 [ABC 087 B - Coins](https://atcoder.jp/contests/abc087/tasks/abc087_b)\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar A, B, C, X int\n\ta, b, c := 500, 100, 50\n\tcount := 0\n\tfmt.Scan(&A, &B, &C, &X)\n\n\tfor _c := 0; _c <= C; _c++ {\n\t\tfor _b := 0; _b <= B; _b++ {\n\t\t\tfor _a := 0; _a <= A; _a++ {\n\t\t\t\tif X == a*_a+b*_b+c*_c {\n\t\t\t\t\tcount++\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(count)\n}\n```\n\n## 5問目 [ABC 083 B - Some Sums](https://atcoder.jp/contests/abc083/tasks/abc083_b)\n```go\npackage main\n\nimport \"fmt\"\n\nfunc sumDigists(n int) int {\n\tsum := 0\n\tif n < 10 {\n\t\treturn n\n\t} else {\n\t\tfor n > 0 {\n\t\t\tsum += n % 10\n\t\t\tn /= 10\n\t\t}\n\t}\n\treturn sum\n}\n\nfunc main() {\n\tvar N, A, B int\n\tfmt.Scan(&N, &A, &B)\n\tvar result int\n\tfor i := 0; i <= N; i++ {\n\t\tif A <= sumDigists(i) && sumDigists(i) <= B {\n\t\t\tresult += i\n\t\t}\n\t}\n\n\tfmt.Println(result)\n}\n```\n\n## 6問目 [ABC 088 B - Card Game for Two](https://atcoder.jp/contests/abc088/tasks/abc088_b)\n降順のソートはこんな感じで行う。\n\n```go\nsort.Sort(sort.Reverse(sort.IntSlice(arr)))\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc scanNums(len int) []int {\n\tvar num int\n\tvar nums []int\n\tfor i := 0; i < len; i++ {\n\t\tfmt.Scan(&num)\n\t\tnums = append(nums, num)\n\t}\n\treturn nums\n}\n\nfunc main() {\n\tvar N int\n\tvar result int\n\tfmt.Scan(&N)\n\tarr := scanNums(N)\n\tsort.Sort(sort.Reverse(sort.IntSlice(arr)))\n\n\tfor i, v := range arr {\n\t\tif i%2 == 0 {\n\t\t\tresult += v\n\t\t} else {\n\t\t\tresult -= v\n\t\t}\n\t}\n\n\tfmt.Println(result)\n}\n```\n\n## 7問目 [ABC 085 B - Kagami Mochi](https://atcoder.jp/contests/abc085/tasks/abc085_b)\n配列をユニークな配列にする関数を用意。\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc uniqValue(arr []int) []int {\n\tm := make(map[int]bool)\n\tvar uniq []int\n\n\tfor _, v := range arr {\n\t\tif !m[v] {\n\t\t\tm[v] = true\n\t\t\tuniq = append(uniq, v)\n\t\t}\n\t}\n\treturn uniq\n}\n\nfunc main() {\n\tvar N int\n\tfmt.Scan(&N)\n\tarr := make([]int, N)\n\n\tfor i := 0; i < N; i++ {\n\t\tfmt.Scan(&arr[i])\n\t}\n\n\tresult := uniqValue(arr)\n\n\tfmt.Println(len(result))\n}\n```\n\n## 8問目 [ABC 085 C - Otoshidama](https://atcoder.jp/contests/abc085/tasks/abc085_c)\nfmt.Printf で文字列に埋め込む。\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar N, sum int\n\tfmt.Scan(&N, &sum)\n\tresult := [3]int{-1, -1, -1}\n\nBREAK_LABEL:\n\tfor i := 0; i <= N; i++ {\n\t\tfor j := 0; j <= N-i; j++ {\n\t\t\tif sum == 10000*i+5000*j+1000*(N-i-j) {\n\t\t\t\tresult[0] = i\n\t\t\t\tresult[1] = j\n\t\t\t\tresult[2] = N - i - j\n\t\t\t\tbreak BREAK_LABEL\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Printf(\"%d %d %d\", result[0], result[1], result[2])\n}\n```\n\n## 9問目 [ABC 049 C - Daydream](https://atcoder.jp/contests/abc049/tasks/arc065_a)\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc reverse(s string) string {\n\trs := []rune(s)\n\tfor i, j := 0, len(rs)-1; i < j; i, j = i+1, j-1 {\n\t\trs[i], rs[j] = rs[j], rs[i]\n\t}\n\n\treturn string(rs)\n}\n\nfunc checker(s string, words []string) bool {\n\tfor _, w := range words {\n\t\tif len(s) < len(w) {\n\t\t\tcontinue\n\t\t}\n\t\tif s[0:len(w)] == w {\n\t\t\tif len(s) == len(w) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn checker(s[len(w):], words)\n\t\t}\n\t}\n\treturn false\n}\n\nfunc main() {\n\tvar s string\n\tfmt.Scan(&s)\n\twords := []string{\"dream\", \"dreamer\", \"erase\", \"eraser\"}\n\n\tfor i, _ := range words {\n\t\twords[i] = reverse(words[i])\n\t}\n\ts = reverse(s)\n\n\tif checker(s, words) {\n\t\tfmt.Println(\"YES\")\n\t} else {\n\t\tfmt.Println(\"NO\")\n\t}\n}\n```\n\n## 10問目 [ABC 086 C - Traveling](https://atcoder.jp/contests/abc086/tasks/arc089_a)\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar N int\n\tfmt.Scan(&N)\n\tvar t0 int = 0\n\tvar t1 int\n\tvar x0, y0 float64 = 0, 0\n\tvar x1, y1 float64\n\n\tfor range make([]int, N) {\n\t\tfmt.Scan(&t1, &x1, &y1)\n\t\tdt := t1 - t0\n\t\tdist := math.Abs(x1-x0) + math.Abs(y1-y0)\n\n\t\tif dt < int(dist) || dt%2 != int(dist)%2 {\n\t\t\tfmt.Println(\"No\")\n\t\t\treturn\n\t\t}\n\n\t\tt0, x0, y0 = t1, x1, y1\n\t}\n\tfmt.Println(\"Yes\")\n}\n```\n\n## おまけ\nTypeScript でも解いてみた。\n### 1問目\n```typescript\nfunction main(input) {\n  const args = input.split(\" \");\n  const a = +args[0];\n  const b = +args[1];\n\n  console.log(a * b % 2 === 0 ? \"Even\" : \"Odd\");\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 2問目\n```typescript\nfunction main(input) {\n  const s1 = +input.split(\"\")[0];\n  const s2 = +input.split(\"\")[1];\n  const s3 = +input.split(\"\")[2];\n  console.log(s1 + s2 + s3);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 3問目\n```typescript\nfunction main(input) {\n  let nums = input.split(\"\\n\")[1].split(\" \").map((e) => +e);\n\n  let cnt = 0;\n\n  while (nums.every((e) => e % 2 === 0)) {\n    cnt++;\n    nums = nums.map((e) => e / 2);\n  }\n\n  console.log(cnt);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 4問目\n```typescript\nfunction main(input) {\n  const [A, B, C, X] = [\n    +input.split(\"\\n\")[0],\n    +input.split(\"\\n\")[1],\n    +input.split(\"\\n\")[2],\n    +input.split(\"\\n\")[3],\n  ];\n\n  let count = 0;\n\n  for (let c = 0; c <= C; c++) {\n    for (let b = 0; b <= B; b++) {\n      for (let a = 0; a <= A; a++) {\n        if (X === 500 * a + 100 * b + 50 * c) {\n          count++;\n        }\n      }\n    }\n  }\n  console.log(count);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 5問目\n```typescript\nfunction main(input) {\n  const n = +input.split(\" \")[0];\n  const a = +input.split(\" \")[1];\n  const b = +input.split(\" \")[2];\n\n  let result = 0;\n  for (let i = 1; i <= n; i++) {\n    if (a <= sumDigists(i) && sumDigists(i) <= b) {\n      result += i;\n    }\n  }\n  console.log(result);\n}\n\nfunction sumDigists(n) {\n  let sum = 0;\n  if (n < 10) {\n    return n;\n  } else {\n    while (n > 0) {\n      sum += n % 10;\n      n = Math.floor(n / 10);\n    }\n    return sum;\n  }\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 6問目\n```typescript\nfunction main(input) {\n  const n = input.split(\"\\n\")[0];\n  const a = input.split(\"\\n\")[1].split(\" \");\n  const arr = a.sort((a, b) => (+b) - (+a));\n\n  let result = 0;\n  for (let i = 0; i < n; i++) {\n    if (i % 2 === 0) {\n      result += +arr[i];\n    } else {\n      result -= +arr[i];\n    }\n  }\n  console.log(result);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 7問目\n```typescript\nfunction main(input) {\n  const n = input.split(\"\\n\")[0];\n  const arr = [];\n  for (let i = 1; i <= n; i++) {\n    arr.push(input.split(\"\\n\")[i]);\n  }\n  const set = new Set(arr);\n  const result = [...set];\n  console.log(result.length);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 8問目\n```typescript\nfunction main(input) {\n  const [n, y] = [\n    input.split(\" \")[0],\n    input.split(\" \")[1],\n  ];\n\n  let result = \"-1 -1 -1\";\n  BREAK_LABEL:\n  for (let i = 0; i <= n; i++) {\n    for (let j = 0; j <= (n - i); j++) {\n      if (+y === 10000 * i + 5000 * j + 1000 * (n - i - j)) {\n        result = `${i} ${j} ${n - i - j}`;\n        break BREAK_LABEL;\n      }\n    }\n  }\n  console.log(result);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 9問目\n```typescript\nfunction main(input) {\n  let s = input.replace(\"\\n\", \"\").split(\"\").reverse().join(\"\");\n  let flg = true;\n  // dream dreamer erase eraser\n\n  while (flg) {\n    if (s.slice(0, 7) === \"dreamer\".split(\"\").reverse().join(\"\")) {\n      s = s.slice(7);\n    } else if (s.slice(0, 6) === \"eraser\".split(\"\").reverse().join(\"\")) {\n      s = s.slice(6);\n    } else if (s.slice(0, 5) === \"erase\".split(\"\").reverse().join(\"\")) {\n      s = s.slice(5);\n    } else if (s.slice(0, 5) === \"dream\".split(\"\").reverse().join(\"\")) {\n      s = s.slice(5);\n    } else {\n      flg = false;\n    }\n  }\n  if (s === \"\") {\n    console.log(\"YES\");\n  } else {\n    console.log(\"NO\");\n  }\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n### 10問目\n```typescript\nfunction main(input) {\n  const n = +input.split(\"\\n\")[0];\n  let t0 = 0;\n  let x0 = 0;\n  let y0 = 0;\n\n  for (let i = 1; i <= n; i++) {\n    let e = input.split(\"\\n\")[i];\n    let t1 = +e.split(\" \")[0];\n    let x1 = +e.split(\" \")[1];\n    let y1 = +e.split(\" \")[2];\n\n    let dt = t1 - t0;\n    let dist = Math.abs(x1 - x0) + Math.abs(y1 - y0);\n\n    if (dt < dist || dt % 2 != dist % 2) {\n      console.log(\"No\");\n      return;\n    }\n    [t0, x0, y0] = [t1, x1, y1];\n  }\n  console.log(\"Yes\");\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n"}},"__N_SSG":true}