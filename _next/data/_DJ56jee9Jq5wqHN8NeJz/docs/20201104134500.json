{"pageProps":{"docBody":{"id":"20201104134500","title":"some / every / filter / map / flatMap / Object.entries とか","content":"\n## some()\n`some()` は配列内の要素 1 つでも条件に合致するものがあれば true を返し、 1 つも合致しなければ false を返す。\n\n```javascript\nconst dataList = [\n  {id: 1, user: \"user1\"},\n  {id: 2, user: \"user2\"},\n  {id: 3, user: \"user3\"},\n]\n\nconst includeId3 = dataList.some(data => data.id === 3)\nconsole.log(includeId3) //true\n```\n\n## ever()\n`every()` は配列内の全ての要素が条件に合致するかを調べることができる。\n```javascript\nconst dataList = [\n  {id: 1, user: \"user1\"},\n  {id: 2, user: \"user2\"},\n  {id: 3, user: \"user3\"},\n]\n\nconst includeId3 = dataList.every(data => data.id === 3)\nconsole.log(includeId3) //false\n```\n\n## filter()\n`filter()` は配列の要素から条件に合致する新しい配列を作成する。\n\n```javascript\nconst dataList = [\n  { id: 1, user: \"usr1\"},\n  { id: 10, user: \"usr10\"},\n  { id: 20, user: \"usr20\"},\n]\n\nconst over10List = dataList.filter(data => data.id >= 10)\n\nconsole.log(over10List)\n// [ { id: 10, user: 'usr10' }, { id: 20, user: 'usr20' } ]\n```\n\n## map()\n`map()` は処理して新しい配列を作成する。\n\n```javascript\nconst dataList = [\n  { id: 1, user: \"usr1\"},\n  { id: 10, user: \"usr10\"},\n  { id: 20, user: \"usr20\"},\n]\n\nconst over10List = dataList\n                    .filter(data => data.id >= 10)\n                    .map(data => data.user)\n\nconsole.log(over10List)\n// [ 'usr10', 'usr20' ]\n```\n\n## flatMap()\n`flatMap()` は配列の階層を解除し、別の配列に置き換える。\n\n`flatMap()` は `map()` の処理の後に `flat()` を実行する。\n\n`flat()` は配列を 1 次元にするメソッド。\n\n```javascript\nconst dataList = [\n  {\n    user: \"user1\",\n    tags: [\"aaa\", \"bbb\"]\n  },\n  {\n    user: \"user2\",\n    tags: [\"ccc\"]\n  },\n  {\n    user: \"user3\",\n    tags: [\"ddd\"]\n  },\n]\n\nconst tagList = dataList.flatMap(data => data.tags)\n\nconsole.log(tagList)\n// [ 'aaa', 'bbb', 'ccc', 'ddd' ]\n\n\nconst tagList2 = dataList.map(data => data.tags)\n\nconsole.log(tagList2.flat())\n// [ 'aaa', 'bbb', 'ccc', 'ddd' ]\n```\n\n## Object.entries()\n`Object.entries( 対象のオブジェクト )` を実行すると `[[key1, value1], [key2, value2]]` が返る。\n\n```javascript\nconst obj = {\n  id: 1,\n  user: \"user1\",\n  name: \"name1\"\n}\n\nconsole.log(Object.entries(obj))\n// [ [ 'id', 1 ], [ 'user', 'user1' ], [ 'name', 'name1' ] ]\n\nObject.entries(obj)\n        .forEach(([key, value]) => {\n          console.log(`Key: ${key}`)\n          console.log(`Value: ${value}`)\n        })\n// Key: id\n// Value: 1\n// Key: user\n// Value: user1\n// Key: name\n// Value: name1\n```\n"}},"__N_SSG":true}