{"pageProps":{"docBody":{"id":"20200504145305","title":"Golang で atcorder の入出力とか繰り返しとか","body":"\n## 入出力\n### 単一数値、文字\n```go\nvar N int\nfmt.Scan(&N)\nfmt.Println(N)\n\nvar s string\nfmt.Scan(&s)\nfmt.Println(s)\n```\n\n### 文字列、数列群をスライスで返す\n```go\nfunc scanStrings(len int) []string {\n  var str string\n  var strs []string\n  for i := 0; i < len; i++ {\n    fmt.Scanf(\"%s\", &str)\n    strs = append(strs, str)\n  }\n  return strings\n}\n\nfunc scanNums(len int) []int {\n  var num int\n  var nums []int\n  for i := 0; i < len; i ++ {\n    fmt.Scan(&num)\n    nums = append(nums, num)\n  }\n  return nums\n}\n```\n\n### 与えられた列をスライスで返す\n```go\nn := 3\narr := make([]int, n)\n\nfor i:= 0; i < n; i ++ {\n  fmt.Scan(&arr[i])\n}\n```\n\n## n 回繰り返す\n```go\nn := 3\n\nfor range(make([]int, n)) {\n  // 処理\n}\n```\n"}},"__N_SSG":true}