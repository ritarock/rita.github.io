{"pageProps":{"data":{"id":"20210104181641","fileContents":"{\n  \"title\": \"Golang で時間操作とソート\",\n  \"date\": 20210104181641,\n  \"tags\": [\n    \"golang\"\n  ],\n  \"bodyContent\": \"[インスタンスのCPUをCLIで確認する](https://github.com/ritarock/moniterinstance)\\n\\nこの CLI を作るにあたってハマったところとその解決法。\\n\\n## 時間でソートする\\n### 配列のソート\\nGolang の場合、お決まりのやり方があるみたいでググると大体同じやり方でやっている。\\n\\nstruct を定義して、 ***Len, Less, Swap*** メソッドを用意する。\\n```go\\ntype Bytime []*cloudwatch.Datapoint\\n\\nfunc (arr Bytime) Len() int {\\n\\treturn len(arr)\\n}\\n\\nfunc (arr Bytime) Less(i, j int) bool {\\n\\treturn arr[i].Timestamp.Before(*arr[j].Timestamp)\\n}\\n\\nfunc (arr Bytime) Swap(i, j int) {\\n\\tarr[i], arr[j] = arr[j], arr[i]\\n}\\n```\\n\\n実際にソートするときは、別の配列を用意した。\\n```go\\nvar sortedResp Bytime = resp.Datapoints\\nsort.Sort(sortedResp)\\n```\\n\\n### 時間の比較\\ntimeA(2020-01-01 00:00:00 +0000 UTC) と timeB(2021-01-01 00:00:00 +0000 UTC) があるとする。\\n```go\\ntimeA, timeB := time.Date(2020, 1, 1, 0, 0, 0 , 0, time.UTC), time.Date(2021, 1, 1, 0, 0, 0 , 0, time.UTC)\\n```\\n\\n時間の流れは ***timeA => timeB***。\\n\\nこのときの時間の比較は以下のようにできる。\\n```go\\ntimeA.Equal(timeB) // false\\n\\ntimeA.Before(timeB) // true\\n\\ntimeA.After(timeB) // false\\n```\\n\\n## UTCをJSTに変更\\n```go\\ntimeA := time.Date(2020, 1, 1, 0, 0, 0 , 0, time.UTC)\\nloc, _ := time.LoadLocation(\\\"Asia/Tokyo\\\")\\n\\nfmt.Println(\\\"UTC \\\" + timeA.String()) // UTC 2020-01-01 00:00:00 +0000 UTC\\nfmt.Println(\\\"JST \\\" + timeA.In(loc).String()) // JST 2020-01-01 09:00:00 +0900 JST\\n```\",\n  \"bodyHtml\": \"<p><a href=\\\"https://github.com/ritarock/moniterinstance\\\">インスタンスのCPUをCLIで確認する</a></p>\\n<p>この CLI を作るにあたってハマったところとその解決法。</p>\\n<h2>時間でソートする</h2>\\n<h3>配列のソート</h3>\\n<p>Golang の場合、お決まりのやり方があるみたいでググると大体同じやり方でやっている。</p>\\n<p>struct を定義して、 <em><strong>Len, Less, Swap</strong></em> メソッドを用意する。</p>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">type</span> Bytime []*cloudwatch.Datapoint\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-params\\\">(arr Bytime)</span> <span class=\\\"hljs-title\\\">Len</span><span class=\\\"hljs-params\\\">()</span> <span class=\\\"hljs-title\\\">int</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-built_in\\\">len</span>(arr)\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-params\\\">(arr Bytime)</span> <span class=\\\"hljs-title\\\">Less</span><span class=\\\"hljs-params\\\">(i, j <span class=\\\"hljs-keyword\\\">int</span>)</span> <span class=\\\"hljs-title\\\">bool</span></span> {\\n\\t<span class=\\\"hljs-keyword\\\">return</span> arr[i].Timestamp.Before(*arr[j].Timestamp)\\n}\\n\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">func</span> <span class=\\\"hljs-params\\\">(arr Bytime)</span> <span class=\\\"hljs-title\\\">Swap</span><span class=\\\"hljs-params\\\">(i, j <span class=\\\"hljs-keyword\\\">int</span>)</span></span> {\\n\\tarr[i], arr[j] = arr[j], arr[i]\\n}</code></pre><p>実際にソートするときは、別の配列を用意した。</p>\\n<pre><code class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">var</span> sortedResp Bytime = resp.Datapoints\\nsort.Sort(sortedResp)</code></pre><h3>時間の比較</h3>\\n<p>timeA(2020-01-01 00:00:00 +0000 UTC) と timeB(2021-01-01 00:00:00 +0000 UTC) があるとする。</p>\\n<pre><code class=\\\"hljs\\\">timeA, timeB := time.Date(<span class=\\\"hljs-number\\\">2020</span>, <span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span> , <span class=\\\"hljs-number\\\">0</span>, time.UTC), time.Date(<span class=\\\"hljs-number\\\">2021</span>, <span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span> , <span class=\\\"hljs-number\\\">0</span>, time.UTC)</code></pre><p>時間の流れは <em><strong>timeA =&gt; timeB</strong></em>。</p>\\n<p>このときの時間の比較は以下のようにできる。</p>\\n<pre><code class=\\\"hljs\\\">timeA.Equal(timeB) <span class=\\\"hljs-comment\\\">// false</span>\\n\\ntimeA.Before(timeB) <span class=\\\"hljs-comment\\\">// true</span>\\n\\ntimeA.After(timeB) <span class=\\\"hljs-comment\\\">// false</span></code></pre><h2>UTCをJSTに変更</h2>\\n<pre><code class=\\\"hljs\\\">timeA := time.Date(<span class=\\\"hljs-number\\\">2020</span>, <span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">1</span>, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span> , <span class=\\\"hljs-number\\\">0</span>, time.UTC)\\nloc, _ := time.LoadLocation(<span class=\\\"hljs-string\\\">&quot;Asia/Tokyo&quot;</span>)\\n\\nfmt.Println(<span class=\\\"hljs-string\\\">&quot;UTC &quot;</span> + timeA.String()) <span class=\\\"hljs-comment\\\">// UTC 2020-01-01 00:00:00 +0000 UTC</span>\\nfmt.Println(<span class=\\\"hljs-string\\\">&quot;JST &quot;</span> + timeA.In(loc).String()) <span class=\\\"hljs-comment\\\">// JST 2020-01-01 09:00:00 +0900 JST</span></code></pre>\",\n  \"dir\": \"articles\",\n  \"base\": \"20210104181641.json\",\n  \"ext\": \".json\",\n  \"sourceBase\": \"20210104181641.md\",\n  \"sourceExt\": \".md\"\n}"}},"__N_SSG":true}