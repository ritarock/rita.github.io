{"pageProps":{"articleData":{"id":"20190829090000","contentHtml":"\n## ディレクトリ構成\n\n```bash\n./\n├── Dockerfile\n├── docker-compose.yml\n├── db_volume/\n├── mysql-confd/\n│   └── default_authentication.cnf\n└── src/\n    ├── Gemfile\n    └── Gemfile.lock\n```\n\n## ファイルの説明\n### Dockerfile\nRails のアプリ用の Dockerfile を定義する  \nMySQL と連携するために mysql-client をインストールしている。\n\n```Dockerfile\nFROM ruby:latest\n\nRUN apt-get update -qq && \\\n    apt-get install -y build-essential && \\\n    apt-get install -y libpq-dev && \\\n    apt-get install -y mysql-client && \\\n    apt-get install -y nodejs\n\nRUN mkdir /myapp\nENV APP_ROOT /myapp\nWORKDIR $APP_ROOT\nADD ./src/Gemfile $APP_ROOT/Gemfile\nADD ./src/Gemfile.lock $APP_ROOT/Gemfile.lock\n\nRUN bundle install\nADD ./src/ $APP_ROOT\n```\n\n### docker-compose\nMySQL のバージョンが 8 以上だと認証でエラーになるので設定ファイルをにマウントする  \n[参考](https://qiita.com/yensaki/items/9e453b7320ca2d0461c7)  \n\nまた  \n`./db_volume:/var/lib/mysql` で DB を永続化している。\n\n```yaml\nversion: '3'\nservices:\n  db:\n    image: mysql:latest\n    volumes:\n      - ./mysql-confd:/etc/mysql/conf.d\n      - ./db_volume:/var/lib/mysql\n    environment:\n      MYSQL_ROOT_PASSWORD: root\n      MYSQL_DATABASE: root\n    ports:\n      - \"3306:3306\"\n\n  web:\n    build: .\n    command: bundle exec rails s -p 3000 -b '0.0.0.0'\n    volumes:\n      - ./src:/myapp\n    ports:\n      - \"3000:3000\"\n    links:\n      - db\n```\n\n### default_authentication.cnf\n認証用の設定ファイル。\n\n```default_authentication.cnf\n[mysqld]\ndefault_authentication_plugin= mysql_native_password\n```\n\n### Gemfile\n\n```Gemfile\nsource 'https://rubygems.org'\ngem 'rails', '5.1.6'\n```\n\nGemfile.lock も作成しておく(中身は空)\n\n```bash\n$ touch ./src/Gemfile.lock\n```\n\n## プロジェクトの構築\n\n```bash\n$ docker-compose run web rails new . --force --database=mysql --skip-bundle\n```\n\n`--skip-bundle` で gem のインストールを回避  \n実行後 `./src` 配下に新しいアプリケーションが作成されている。\n\n## データベースに接続\n`./src/config/database.yml` の password と host を docker-compose で定義した内容に変更。\n\n```yaml\ndefault: &default\n  adapter: mysql2\n  encoding: utf8\n  pool: <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %>\n  username: root\n  password: root\n  host: db\n```\n\n## dockerの起動\nビルド。\n\n```bash\n$ docker-compose build\n```\n\n起動。\n\n```bash\n$ docker-compose up\n```\n\n## DBの作成\n\n```bash\n$ docker-compose run web rails db:create\n```\n\n## 確認\nブラウザで[localhost:3000](localhost:3000)にアクセス。\n\nrails のコンテナにアクセスして DB との接続確認。\n\n```bash\n$ docker exec -it コンテナID /bin/bash\n```\n\n接続したコンテナから DB に接続。\n\n```bash\n$ rails dbconsole\n```\n","title":"docker-compose で Rails と Mysql を使う","date":20190829090000,"tags":["Docker","Rails","環境構築"]}},"__N_SSG":true}